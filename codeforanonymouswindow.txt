string s1 = ' <?xmlversion="1.0"encoding="UTF-8"?><Packagexmlns="http://soap.sforce.com/2006/04/metadata"><types> <members> Case</members><members> Account</members> <name>CustomObject </name></types> <types> <members> HSvc_CaseCreateEdit</members> <name>ApexPage </name></types><version>42.0</version></Package>  ';
String s2 =  ' <?xmlversion="1.0"encoding="UTF-8"?><Packagexmlns="http://soap.sforce.com/2006/04/metadata"><types> <members>Account</members><name>CustomObject</name></types><types> <members>Account</members><name>SharingRule</name></types><version>42.0</version></Package>';
List<string> givenPackages = new list<string>{s1,s2};
List<string> finalpackge = new list<string>();
    for(string packg : givenPackages){
        packg = packg.trim();
        packg = packg.replaceAll('(\\s+)', '');
        packg = packg.remove('<?xmlversion="1.0"encoding="UTF-8"?><Packagexmlns="http://soap.sforce.com/2006/04/metadata">');
		packg = packg.remove('<version>42.0</version></Package>');
        packg = packg.replaceAll('</types>', '</types>;');     
        finalpackge.add(packg);
        system.debug('packg'+ packg);
    }
list<String> types = new list<string>();
list<String> types2 = new list<string>();
types = finalpackge[0].split(';');
types2 = finalpackge[1].split(';');
map<string, list<string>> mapoflistofstrings = new map<string, list<string>>();
mapoflistofstrings.put('type1',types);
mapoflistofstrings.put('type2',types2);
map<string, list<string>> listOfFilesByType = new map<string, list<string>>();
List<map<string, list<string>>> listofMaps = new List<map<string, list<string>>>();
for(string typekey : mapoflistofstrings.keyset()){
    listOfFilesByType = new map<string, list<string>>();
	for(string st1 : mapoflistofstrings.get(typekey)){
    string metaType = st1.substringBetween('<name>','</name>');
    st1 = st1.replaceAll('</members>', '</members>;');
    List<string> removables = new list<string>{'<name>','</name>',metaType,'<members>', '</members>',  '<types>', '</types>'};
        for(string rem : removables){
            st1 = st1.remove(rem);
        }
    list<string> files = st1.split(';');
    listOfFilesByType.put(metaType,files);
    
}
    listofMaps.add(listOfFilesByType);
}
//system.debug('listofMaps'+ listofMaps);
map<string, list<string>>totalmap = new map<string, list<string>>();
totalmap.putall(listofMaps[0]);
set<string> finalset = new set<string>();
list<string> finallist = new list<string>();
for(string key : listofMaps[1].keyset()){
    if(!totalmap.containskey(key)){
        totalmap.put(key, listofMaps[1].get(key));
    }
    else{
        finalset.addAll(totalmap.get(key));
        finalset.addAll(listofMaps[1].get(key));
        finallist.addAll(finalset);
        totalmap.put(key, finallist);
    }
}
string finalstring = '<?xml version="1.0" encoding="UTF-8"?><Package xmlns="http://soap.sforce.com/2006/04/metadata">';
for(string key : totalmap.keyset()){
    finalstring = finalstring + '<types>';
    for(string val : totalmap.get(key)){
        finalstring = finalstring + '<members>'+val+ '</members>';
    }
    finalstring = finalstring + '<name>'+key+'</name></types>';
}
finalstring = finalstring+'<version>40.0</version></Package>';
system.debug('finalstring'+ finalstring);
